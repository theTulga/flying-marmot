/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as AboutImport } from './routes/about'
import { Route as BusinessesIndexImport } from './routes/businesses/index'
import { Route as BusinessesCreateImport } from './routes/businesses/create'
import { Route as BusinessesBusinessIdImport } from './routes/businesses/$businessId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BusinessesIndexRoute = BusinessesIndexImport.update({
  path: '/businesses/',
  getParentRoute: () => rootRoute,
} as any)

const BusinessesCreateRoute = BusinessesCreateImport.update({
  path: '/businesses/create',
  getParentRoute: () => rootRoute,
} as any)

const BusinessesBusinessIdRoute = BusinessesBusinessIdImport.update({
  path: '/businesses/$businessId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/businesses/$businessId': {
      id: '/businesses/$businessId'
      path: '/businesses/$businessId'
      fullPath: '/businesses/$businessId'
      preLoaderRoute: typeof BusinessesBusinessIdImport
      parentRoute: typeof rootRoute
    }
    '/businesses/create': {
      id: '/businesses/create'
      path: '/businesses/create'
      fullPath: '/businesses/create'
      preLoaderRoute: typeof BusinessesCreateImport
      parentRoute: typeof rootRoute
    }
    '/businesses/': {
      id: '/businesses/'
      path: '/businesses'
      fullPath: '/businesses'
      preLoaderRoute: typeof BusinessesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutRoute,
  AuthRoute,
  BusinessesBusinessIdRoute,
  BusinessesCreateRoute,
  BusinessesIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth",
        "/businesses/$businessId",
        "/businesses/create",
        "/businesses/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/businesses/$businessId": {
      "filePath": "businesses/$businessId.tsx"
    },
    "/businesses/create": {
      "filePath": "businesses/create.tsx"
    },
    "/businesses/": {
      "filePath": "businesses/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
